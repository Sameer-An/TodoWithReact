    /*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
    @layer properties {
    @supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or
        ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
        *,
        :before,
        :after,
        ::backdrop {
        --tw-rotate-x: initial;
        --tw-rotate-y: initial;
        --tw-rotate-z: initial;
        --tw-skew-x: initial;
        --tw-skew-y: initial;
        --tw-border-style: solid;
        --tw-gradient-position: initial;
        --tw-gradient-from: #0000;
        --tw-gradient-via: #0000;
        --tw-gradient-to: #0000;
        --tw-gradient-stops: initial;
        --tw-gradient-via-stops: initial;
        --tw-gradient-from-position: 0%;
        --tw-gradient-via-position: 50%;
        --tw-gradient-to-position: 100%;
        --tw-font-weight: initial;
        --tw-shadow: 0 0 #0000;
        --tw-shadow-color: initial;
        --tw-shadow-alpha: 100%;
        --tw-inset-shadow: 0 0 #0000;
        --tw-inset-shadow-color: initial;
        --tw-inset-shadow-alpha: 100%;
        --tw-ring-color: initial;
        --tw-ring-shadow: 0 0 #0000;
        --tw-inset-ring-color: initial;
        --tw-inset-ring-shadow: 0 0 #0000;
        --tw-ring-inset: initial;
        --tw-ring-offset-width: 0px;
        --tw-ring-offset-color: #fff;
        --tw-ring-offset-shadow: 0 0 #0000;
        --tw-blur: initial;
        --tw-brightness: initial;
        --tw-contrast: initial;
        --tw-grayscale: initial;
        --tw-hue-rotate: initial;
        --tw-invert: initial;
        --tw-opacity: initial;
        --tw-saturate: initial;
        --tw-sepia: initial;
        --tw-drop-shadow: initial;
        --tw-drop-shadow-color: initial;
        --tw-drop-shadow-alpha: 100%;
        --tw-drop-shadow-size: initial;
        --tw-backdrop-blur: initial;
        --tw-backdrop-brightness: initial;
        --tw-backdrop-contrast: initial;
        --tw-backdrop-grayscale: initial;
        --tw-backdrop-hue-rotate: initial;
        --tw-backdrop-invert: initial;
        --tw-backdrop-opacity: initial;
        --tw-backdrop-saturate: initial;
        --tw-backdrop-sepia: initial;
        --tw-duration: initial;
        --tw-scale-x: 1;
        --tw-scale-y: 1;
        --tw-scale-z: 1;
        }
    }
    }
    @layer theme {
    :root,
    :host {
        --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
        "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
        --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
        "Liberation Mono", "Courier New", monospace;
        --color-red-400: oklch(70.4% 0.191 22.216);
        --color-red-500: oklch(63.7% 0.237 25.331);
        --color-red-700: oklch(50.5% 0.213 27.518);
        --color-green-400: oklch(79.2% 0.209 151.711);
        --color-green-500: oklch(72.3% 0.219 149.579);
        --color-green-600: oklch(62.7% 0.194 149.214);
        --color-green-700: oklch(52.7% 0.154 150.069);
        --color-blue-400: oklch(70.7% 0.165 254.624);
        --color-blue-500: oklch(62.3% 0.214 259.815);
        --color-blue-600: oklch(54.6% 0.245 262.881);
        --color-violet-50: oklch(96.9% 0.016 293.756);
        --color-violet-100: oklch(94.3% 0.029 294.588);
        --color-violet-200: oklch(89.4% 0.057 293.283);
        --color-violet-300: oklch(81.1% 0.111 293.571);
        --color-violet-400: oklch(70.2% 0.183 293.541);
        --color-violet-700: oklch(49.1% 0.27 292.581);
        --color-violet-800: oklch(43.2% 0.232 292.759);
        --color-violet-900: oklch(38% 0.189 293.745);
        --color-violet-950: oklch(28.3% 0.141 291.089);
        --color-purple-400: oklch(71.4% 0.203 305.504);
        --color-purple-500: oklch(62.7% 0.265 303.9);
        --color-purple-600: oklch(55.8% 0.288 302.321);
        --color-pink-500: oklch(65.6% 0.241 354.308);
        --color-pink-600: oklch(59.2% 0.249 0.584);
        --color-gray-800: oklch(27.8% 0.033 256.848);
        --color-neutral-600: oklch(43.9% 0 0);
        --color-white: #fff;
        --spacing: 0.25rem;
        --container-2xl: 42rem;
        --container-4xl: 56rem;
        --text-sm: 0.875rem;
        --text-sm--line-height: calc(1.25 / 0.875);
        --text-base: 1rem;
        --text-base--line-height: 1.5;
        --text-lg: 1.125rem;
        --text-lg--line-height: calc(1.75 / 1.125);
        --text-2xl: 1.5rem;
        --text-2xl--line-height: calc(2 / 1.5);
        --text-3xl: 1.875rem;
        --text-3xl--line-height: 1.2;
        --text-4xl: 2.25rem;
        --text-4xl--line-height: calc(2.5 / 2.25);
        --font-weight-bold: 700;
        --radius-md: 0.375rem;
        --radius-lg: 0.5rem;
        --radius-xl: 0.75rem;
        --radius-2xl: 1rem;
        --radius-3xl: 1.5rem;
        --drop-shadow-lg: 0 4px 4px #00000026;
        --blur-sm: 8px;
        --blur-lg: 16px;
        --default-transition-duration: 0.15s;
        --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        --default-font-family: var(--font-sans);
        --default-mono-font-family: var(--font-mono);
    }
    }
    @layer base {
    *,
    :after,
    :before,
    ::backdrop {
        box-sizing: border-box;
        border: 0 solid;
        margin: 0;
        padding: 0;
    }
    ::file-selector-button {
        box-sizing: border-box;
        border: 0 solid;
        margin: 0;
        padding: 0;
    }
    html,
    :host {
        -webkit-text-size-adjust: 100%;
        tab-size: 4;
        line-height: 1.5;
        font-family: var(
        --default-font-family,
        ui-sans-serif,
        system-ui,
        sans-serif,
        "Apple Color Emoji",
        "Segoe UI Emoji",
        "Segoe UI Symbol",
        "Noto Color Emoji"
        );
        font-feature-settings: var(--default-font-feature-settings, normal);
        font-variation-settings: var(--default-font-variation-settings, normal);
        -webkit-tap-highlight-color: transparent;
    }
    hr {
        height: 0;
        color: inherit;
        border-top-width: 1px;
    }
    abbr:where([title]) {
        -webkit-text-decoration: underline dotted;
        text-decoration: underline dotted;
    }
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        font-size: inherit;
        font-weight: inherit;
    }
    a {
        color: inherit;
        -webkit-text-decoration: inherit;
        text-decoration: inherit;
    }
    b,
    strong {
        font-weight: bolder;
    }
    code,
    kbd,
    samp,
    pre {
        font-family: var(
        --default-mono-font-family,
        ui-monospace,
        SFMono-Regular,
        Menlo,
        Monaco,
        Consolas,
        "Liberation Mono",
        "Courier New",
        monospace
        );
        font-feature-settings: var(--default-mono-font-feature-settings, normal);
        font-variation-settings: var(
        --default-mono-font-variation-settings,
        normal
        );
        font-size: 1em;
    }
    small {
        font-size: 80%;
    }
    sub,
    sup {
        vertical-align: baseline;
        font-size: 75%;
        line-height: 0;
        position: relative;
    }
    sub {
        bottom: -0.25em;
    }
    sup {
        top: -0.5em;
    }
    table {
        text-indent: 0;
        border-color: inherit;
        border-collapse: collapse;
    }
    :-moz-focusring {
        outline: auto;
    }
    progress {
        vertical-align: baseline;
    }
    summary {
        display: list-item;
    }
    ol,
    ul,
    menu {
        list-style: none;
    }
    img,
    svg,
    video,
    canvas,
    audio,
    iframe,
    embed,
    object {
        vertical-align: middle;
        display: block;
    }
    img,
    video {
        max-width: 100%;
        height: auto;
    }
    button,
    input,
    select,
    optgroup,
    textarea {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        opacity: 1;
        background-color: #0000;
        border-radius: 0;
    }
    ::file-selector-button {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        opacity: 1;
        background-color: #0000;
        border-radius: 0;
    }
    :where(select:is([multiple], [size])) optgroup {
        font-weight: bolder;
    }
    :where(select:is([multiple], [size])) optgroup option {
        padding-inline-start: 20px;
    }
    ::file-selector-button {
        margin-inline-end: 4px;
    }
    ::placeholder {
        opacity: 1;
    }
    @supports (not ((-webkit-appearance: -apple-pay-button))) or
        (contain-intrinsic-size: 1px) {
        ::placeholder {
        color: currentColor;
        }
        @supports (color: color-mix(in lab, red, red)) {
        ::placeholder {
            color: color-mix(in oklab, currentcolor 50%, transparent);
        }
        }
    }
    textarea {
        resize: vertical;
    }
    ::-webkit-search-decoration {
        -webkit-appearance: none;
    }
    ::-webkit-date-and-time-value {
        min-height: 1lh;
        text-align: inherit;
    }
    ::-webkit-datetime-edit {
        display: inline-flex;
    }
    ::-webkit-datetime-edit-fields-wrapper {
        padding: 0;
    }
    ::-webkit-datetime-edit {
        padding-block: 0;
    }
    ::-webkit-datetime-edit-year-field {
        padding-block: 0;
    }
    ::-webkit-datetime-edit-month-field {
        padding-block: 0;
    }
    ::-webkit-datetime-edit-day-field {
        padding-block: 0;
    }
    ::-webkit-datetime-edit-hour-field {
        padding-block: 0;
    }
    ::-webkit-datetime-edit-minute-field {
        padding-block: 0;
    }
    ::-webkit-datetime-edit-second-field {
        padding-block: 0;
    }
    ::-webkit-datetime-edit-millisecond-field {
        padding-block: 0;
    }
    ::-webkit-datetime-edit-meridiem-field {
        padding-block: 0;
    }
    :-moz-ui-invalid {
        box-shadow: none;
    }
    button,
    input:where([type="button"], [type="reset"], [type="submit"]) {
        appearance: button;
    }
    ::file-selector-button {
        appearance: button;
    }
    ::-webkit-inner-spin-button {
        height: auto;
    }
    ::-webkit-outer-spin-button {
        height: auto;
    }
    [hidden]:where(:not([hidden="until-found"])) {
        display: none !important;
    }
    }
    @layer components;
    @layer utilities {
    .container {
        width: 100%;
    }
    @media (min-width: 40rem) {
        .container {
        max-width: 40rem;
        }
    }
    @media (min-width: 48rem) {
        .container {
        max-width: 48rem;
        }
    }
    @media (min-width: 64rem) {
        .container {
        max-width: 64rem;
        }
    }
    @media (min-width: 80rem) {
        .container {
        max-width: 80rem;
        }
    }
    @media (min-width: 96rem) {
        .container {
        max-width: 96rem;
        }
    }
    .m-3 {
        margin: calc(var(--spacing) * 3);
    }
    .m-auto {
        margin: auto;
    }
    .mx-2 {
        margin-inline: calc(var(--spacing) * 2);
    }
    .mx-3 {
        margin-inline: calc(var(--spacing) * 3);
    }
    .mx-\[1vw\] {
        margin-inline: 1vw;
    }
    .mx-auto {
        margin-inline: auto;
    }
    .my-2 {
        margin-block: calc(var(--spacing) * 2);
    }
    .mt-1 {
        margin-top: calc(var(--spacing) * 1);
    }
    .mt-2 {
        margin-top: calc(var(--spacing) * 2);
    }
    .mt-3 {
        margin-top: calc(var(--spacing) * 3);
    }
    .mt-5 {
        margin-top: calc(var(--spacing) * 5);
    }
    .mt-6 {
        margin-top: calc(var(--spacing) * 6);
    }
    .mr-2 {
        margin-right: calc(var(--spacing) * 2);
    }
    .mb-4 {
        margin-bottom: calc(var(--spacing) * 4);
    }
    .mb-5 {
        margin-bottom: calc(var(--spacing) * 5);
    }
    .mb-7 {
        margin-bottom: calc(var(--spacing) * 7);
    }
    .mb-8 {
        margin-bottom: calc(var(--spacing) * 8);
    }
    .flex {
        display: flex;
    }
    .h-2 {
        height: calc(var(--spacing) * 2);
    }
    .h-5 {
        height: calc(var(--spacing) * 5);
    }
    .h-6 {
        height: calc(var(--spacing) * 6);
    }
    .h-16 {
        height: calc(var(--spacing) * 16);
    }
    .h-fit {
        height: fit-content;
    }
    .min-h-16 {
        min-height: calc(var(--spacing) * 16);
    }
    .min-h-\[46vh\] {
        min-height: 46vh;
    }
    .min-h-\[70vh\] {
        min-height: 70vh;
    }
    .min-h-\[400px\] {
        min-height: 400px;
    }
    .min-h-screen {
        min-height: 100vh;
    }
    .w-1\/2 {
        width: 50%;
    }
    .w-2\/3 {
        width: 66.6667%;
    }
    .w-5 {
        width: calc(var(--spacing) * 5);
    }
    .w-6 {
        width: calc(var(--spacing) * 6);
    }
    .w-16 {
        width: calc(var(--spacing) * 16);
    }
    .w-full {
        width: 100%;
    }
    .max-w-2xl {
        max-width: var(--container-2xl);
    }
    .max-w-4xl {
        max-width: var(--container-4xl);
    }
    .max-w-\[31vmax\] {
        max-width: 31vmax;
    }
    .min-w-\[3rem\] {
        min-width: 3rem;
    }
    .min-w-fit {
        min-width: fit-content;
    }
    .transform {
        transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z)
        var(--tw-skew-x) var(--tw-skew-y);
    }
    .flex-col {
        flex-direction: column;
    }
    .flex-wrap {
        flex-wrap: wrap;
    }
    .items-center {
        align-items: center;
    }
    .items-end {
        align-items: flex-end;
    }
    .items-start {
        align-items: flex-start;
    }
    .justify-between {
        justify-content: space-between;
    }
    .justify-center {
        justify-content: center;
    }
    .justify-end {
        justify-content: flex-end;
    }
    .gap-2 {
        gap: calc(var(--spacing) * 2);
    }
    .gap-3 {
        gap: calc(var(--spacing) * 3);
    }
    .rounded {
        border-radius: 0.25rem;
    }
    .rounded-2xl {
        border-radius: var(--radius-2xl);
    }
    .rounded-3xl {
        border-radius: var(--radius-3xl);
    }
    .rounded-full {
        border-radius: 3.40282e38px;
    }
    .rounded-lg {
        border-radius: var(--radius-lg);
    }
    .rounded-md {
        border-radius: var(--radius-md);
    }
    .rounded-xl {
        border-radius: var(--radius-xl);
    }
    .border {
        border-style: var(--tw-border-style);
        border-width: 1px;
    }
    .border-3 {
        border-style: var(--tw-border-style);
        border-width: 3px;
    }
    .border-4 {
        border-style: var(--tw-border-style);
        border-width: 4px;
    }
    .border-none {
        --tw-border-style: none;
        border-style: none;
    }
    .border-violet-800 {
        border-color: var(--color-violet-800);
    }
    .border-violet-800\/30 {
        border-color: #5d0ec04d;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .border-violet-800\/30 {
        border-color: color-mix(
            in oklab,
            var(--color-violet-800) 30%,
            transparent
        );
        }
    }
    .border-violet-800\/50 {
        border-color: #5d0ec080;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .border-violet-800\/50 {
        border-color: color-mix(
            in oklab,
            var(--color-violet-800) 50%,
            transparent
        );
        }
    }
    .border-white {
        border-color: var(--color-white);
    }
    .border-white\/20 {
        border-color: #fff3;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .border-white\/20 {
        border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
        }
    }
    .border-white\/30 {
        border-color: #ffffff4d;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .border-white\/30 {
        border-color: color-mix(in oklab, var(--color-white) 30%, transparent);
        }
    }
    .border-white\/40 {
        border-color: #fff6;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .border-white\/40 {
        border-color: color-mix(in oklab, var(--color-white) 40%, transparent);
        }
    }
    .bg-green-500 {
        background-color: var(--color-green-500);
    }
    .bg-red-500 {
        background-color: var(--color-red-500);
    }
    .bg-transparent {
        background-color: #0000;
    }
    .bg-violet-50 {
        background-color: var(--color-violet-50);
    }
    .bg-violet-100 {
        background-color: var(--color-violet-100);
    }
    .bg-violet-200 {
        background-color: var(--color-violet-200);
    }
    .bg-violet-300 {
        background-color: var(--color-violet-300);
    }
    .bg-violet-400 {
        background-color: var(--color-violet-400);
    }
    .bg-violet-400\/40 {
        background-color: #a685ff66;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-violet-400\/40 {
        background-color: color-mix(
            in oklab,
            var(--color-violet-400) 40%,
            transparent
        );
        }
    }
    .bg-violet-700 {
        background-color: var(--color-violet-700);
    }
    .bg-white\/10 {
        background-color: #ffffff1a;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-white\/10 {
        background-color: color-mix(
            in oklab,
            var(--color-white) 10%,
            transparent
        );
        }
    }
    .bg-white\/20 {
        background-color: #fff3;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .bg-white\/20 {
        background-color: color-mix(
            in oklab,
            var(--color-white) 20%,
            transparent
        );
        }
    }
    .bg-gradient-to-br {
        --tw-gradient-position: to bottom right in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops));
    }
    .bg-gradient-to-r {
        --tw-gradient-position: to right in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops));
    }
    .from-blue-400 {
        --tw-gradient-from: var(--color-blue-400);
        --tw-gradient-stops: var(
        --tw-gradient-via-stops,
        var(--tw-gradient-position),
        var(--tw-gradient-from) var(--tw-gradient-from-position),
        var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .from-green-400 {
        --tw-gradient-from: var(--color-green-400);
        --tw-gradient-stops: var(
        --tw-gradient-via-stops,
        var(--tw-gradient-position),
        var(--tw-gradient-from) var(--tw-gradient-from-position),
        var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .from-purple-400 {
        --tw-gradient-from: var(--color-purple-400);
        --tw-gradient-stops: var(
        --tw-gradient-via-stops,
        var(--tw-gradient-position),
        var(--tw-gradient-from) var(--tw-gradient-from-position),
        var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .from-red-400 {
        --tw-gradient-from: var(--color-red-400);
        --tw-gradient-stops: var(
        --tw-gradient-via-stops,
        var(--tw-gradient-position),
        var(--tw-gradient-from) var(--tw-gradient-from-position),
        var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .via-pink-500 {
        --tw-gradient-via: var(--color-pink-500);
        --tw-gradient-via-stops: var(--tw-gradient-position),
        var(--tw-gradient-from) var(--tw-gradient-from-position),
        var(--tw-gradient-via) var(--tw-gradient-via-position),
        var(--tw-gradient-to) var(--tw-gradient-to-position);
        --tw-gradient-stops: var(--tw-gradient-via-stops);
    }
    .to-blue-500 {
        --tw-gradient-to: var(--color-blue-500);
        --tw-gradient-stops: var(
        --tw-gradient-via-stops,
        var(--tw-gradient-position),
        var(--tw-gradient-from) var(--tw-gradient-from-position),
        var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .to-green-500 {
        --tw-gradient-to: var(--color-green-500);
        --tw-gradient-stops: var(
        --tw-gradient-via-stops,
        var(--tw-gradient-position),
        var(--tw-gradient-from) var(--tw-gradient-from-position),
        var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .to-pink-500 {
        --tw-gradient-to: var(--color-pink-500);
        --tw-gradient-stops: var(
        --tw-gradient-via-stops,
        var(--tw-gradient-position),
        var(--tw-gradient-from) var(--tw-gradient-from-position),
        var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .to-purple-500 {
        --tw-gradient-to: var(--color-purple-500);
        --tw-gradient-stops: var(
        --tw-gradient-via-stops,
        var(--tw-gradient-position),
        var(--tw-gradient-from) var(--tw-gradient-from-position),
        var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .to-red-500 {
        --tw-gradient-to: var(--color-red-500);
        --tw-gradient-stops: var(
        --tw-gradient-via-stops,
        var(--tw-gradient-position),
        var(--tw-gradient-from) var(--tw-gradient-from-position),
        var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
    }
    .p-1 {
        padding: calc(var(--spacing) * 1);
    }
    .p-2 {
        padding: calc(var(--spacing) * 2);
    }
    .p-3 {
        padding: calc(var(--spacing) * 3);
    }
    .p-4 {
        padding: calc(var(--spacing) * 4);
    }
    .p-6 {
        padding: calc(var(--spacing) * 6);
    }
    .px-1 {
        padding-inline: calc(var(--spacing) * 1);
    }
    .px-2 {
        padding-inline: calc(var(--spacing) * 2);
    }
    .px-3 {
        padding-inline: calc(var(--spacing) * 3);
    }
    .px-4 {
        padding-inline: calc(var(--spacing) * 4);
    }
    .py-1 {
        padding-block: calc(var(--spacing) * 1);
    }
    .py-2 {
        padding-block: calc(var(--spacing) * 2);
    }
    .py-2\.5 {
        padding-block: calc(var(--spacing) * 2.5);
    }
    .py-3 {
        padding-block: calc(var(--spacing) * 3);
    }
    .py-4 {
        padding-block: calc(var(--spacing) * 4);
    }
    .py-6 {
        padding-block: calc(var(--spacing) * 6);
    }
    .py-16 {
        padding-block: calc(var(--spacing) * 16);
    }
    .text-center {
        text-align: center;
    }
    .text-justify {
        text-align: justify;
    }
    .text-2xl {
        font-size: var(--text-2xl);
        line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
    .text-3xl {
        font-size: var(--text-3xl);
        line-height: var(--tw-leading, var(--text-3xl--line-height));
    }
    .text-lg {
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));
    }
    .text-sm {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height));
    }
    .text-\[2\.5vmin\] {
        font-size: 2.5vmin;
    }
    .font-bold {
        --tw-font-weight: var(--font-weight-bold);
        font-weight: var(--font-weight-bold);
    }
    .break-words {
        overflow-wrap: break-word;
    }
    .text-gray-800 {
        color: var(--color-gray-800);
    }
    .text-violet-950 {
        color: var(--color-violet-950);
    }
    .text-white {
        color: var(--color-white);
    }
    .text-white\/70 {
        color: #ffffffb3;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .text-white\/70 {
        color: color-mix(in oklab, var(--color-white) 70%, transparent);
        }
    }
    .text-white\/80 {
        color: #fffc;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .text-white\/80 {
        color: color-mix(in oklab, var(--color-white) 80%, transparent);
        }
    }
    .line-through {
        text-decoration-line: line-through;
    }
    .placeholder-white\/70::placeholder {
        color: #ffffffb3;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .placeholder-white\/70::placeholder {
        color: color-mix(in oklab, var(--color-white) 70%, transparent);
        }
    }
    .accent-green-500 {
        accent-color: var(--color-green-500);
    }
    .opacity-50 {
        opacity: 0.5;
    }
    .opacity-60 {
        opacity: 0.6;
    }
    .shadow {
        --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a),
        0 1px 2px -1px var(--tw-shadow-color, #0000001a);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
        var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    .shadow-2xl {
        --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, #00000040);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
        var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    .shadow-inner {
        --tw-shadow: inset 0 2px 4px 0 var(--tw-shadow-color, #0000000d);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
        var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    .shadow-lg {
        --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, #0000001a),
        0 4px 6px -4px var(--tw-shadow-color, #0000001a);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
        var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    .inset-shadow-neutral-600 {
        --tw-inset-shadow-color: oklch(43.9% 0 0);
    }
    @supports (color: color-mix(in lab, red, red)) {
        .inset-shadow-neutral-600 {
        --tw-inset-shadow-color: color-mix(
            in oklab,
            var(--color-neutral-600) var(--tw-inset-shadow-alpha),
            transparent
        );
        }
    }
    .drop-shadow-lg {
        --tw-drop-shadow-size: drop-shadow(
        0 4px 4px var(--tw-drop-shadow-color, #00000026)
        );
        --tw-drop-shadow: drop-shadow(var(--drop-shadow-lg));
        filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
        var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert)
        var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
    }
    .backdrop-blur-lg {
        --tw-backdrop-blur: blur(var(--blur-lg));
        -webkit-backdrop-filter: var(--tw-backdrop-blur)
        var(--tw-backdrop-brightness) var(--tw-backdrop-contrast)
        var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate)
        var(--tw-backdrop-invert) var(--tw-backdrop-opacity)
        var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
        backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness)
        var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale)
        var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert)
        var(--tw-backdrop-opacity) var(--tw-backdrop-saturate)
        var(--tw-backdrop-sepia);
    }
    .backdrop-blur-sm {
        --tw-backdrop-blur: blur(var(--blur-sm));
        -webkit-backdrop-filter: var(--tw-backdrop-blur)
        var(--tw-backdrop-brightness) var(--tw-backdrop-contrast)
        var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate)
        var(--tw-backdrop-invert) var(--tw-backdrop-opacity)
        var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
        backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness)
        var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale)
        var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert)
        var(--tw-backdrop-opacity) var(--tw-backdrop-saturate)
        var(--tw-backdrop-sepia);
    }
    .transition-all {
        transition-property: all;
        transition-timing-function: var(
        --tw-ease,
        var(--default-transition-timing-function)
        );
        transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
    .duration-300 {
        --tw-duration: 0.3s;
        transition-duration: 0.3s;
    }
    .duration-500 {
        --tw-duration: 0.5s;
        transition-duration: 0.5s;
    }
    .outline-none {
        --tw-outline-style: none;
        outline-style: none;
    }
    @media (hover: hover) {
        .hover\:scale-105:hover {
        --tw-scale-x: 105%;
        --tw-scale-y: 105%;
        --tw-scale-z: 105%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
        }
        .hover\:bg-green-700:hover {
        background-color: var(--color-green-700);
        }
        .hover\:bg-red-700:hover {
        background-color: var(--color-red-700);
        }
        .hover\:bg-violet-900:hover {
        background-color: var(--color-violet-900);
        }
        .hover\:bg-white\/30:hover {
        background-color: #ffffff4d;
        }
        @supports (color: color-mix(in lab, red, red)) {
        .hover\:bg-white\/30:hover {
            background-color: color-mix(
            in oklab,
            var(--color-white) 30%,
            transparent
            );
        }
        }
        .hover\:from-blue-500:hover {
        --tw-gradient-from: var(--color-blue-500);
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
        }
        .hover\:from-green-500:hover {
        --tw-gradient-from: var(--color-green-500);
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
        }
        .hover\:from-red-500:hover {
        --tw-gradient-from: var(--color-red-500);
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
        }
        .hover\:to-blue-600:hover {
        --tw-gradient-to: var(--color-blue-600);
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
        }
        .hover\:to-green-600:hover {
        --tw-gradient-to: var(--color-green-600);
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
        }
        .hover\:to-pink-600:hover {
        --tw-gradient-to: var(--color-pink-600);
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
        }
        .hover\:to-purple-600:hover {
        --tw-gradient-to: var(--color-purple-600);
        --tw-gradient-stops: var(
            --tw-gradient-via-stops,
            var(--tw-gradient-position),
            var(--tw-gradient-from) var(--tw-gradient-from-position),
            var(--tw-gradient-to) var(--tw-gradient-to-position)
        );
        }
        .hover\:shadow-none:hover {
        --tw-shadow: 0 0 #0000;
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
            var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        }
    }
    .focus\:border-white\/50:focus {
        border-color: #ffffff80;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .focus\:border-white\/50:focus {
        border-color: color-mix(in oklab, var(--color-white) 50%, transparent);
        }
    }
    .focus\:bg-white\/30:focus {
        background-color: #ffffff4d;
    }
    @supports (color: color-mix(in lab, red, red)) {
        .focus\:bg-white\/30:focus {
        background-color: color-mix(
            in oklab,
            var(--color-white) 30%,
            transparent
        );
        }
    }
    @media (min-width: 40rem) {
        .sm\:mt-0 {
        margin-top: calc(var(--spacing) * 0);
        }
        .sm\:h-6 {
        height: calc(var(--spacing) * 6);
        }
        .sm\:w-2\/3 {
        width: 66.6667%;
        }
        .sm\:w-4\/5 {
        width: 80%;
        }
        .sm\:w-6 {
        width: calc(var(--spacing) * 6);
        }
        .sm\:w-11\/12 {
        width: 91.6667%;
        }
        .sm\:w-auto {
        width: auto;
        }
        .sm\:flex-row {
        flex-direction: row;
        }
        .sm\:items-center {
        align-items: center;
        }
        .sm\:text-3xl {
        font-size: var(--text-3xl);
        line-height: var(--tw-leading, var(--text-3xl--line-height));
        }
        .sm\:text-base {
        font-size: var(--text-base);
        line-height: var(--tw-leading, var(--text-base--line-height));
        }
    }
    @media (min-width: 48rem) {
        .md\:mt-0 {
        margin-top: calc(var(--spacing) * 0);
        }
        .md\:w-2\/3 {
        width: 66.6667%;
        }
        .md\:w-4\/5 {
        width: 80%;
        }
        .md\:w-auto {
        width: auto;
        }
        .md\:flex-row {
        flex-direction: row;
        }
        .md\:items-center {
        align-items: center;
        }
        .md\:p-8 {
        padding: calc(var(--spacing) * 8);
        }
        .md\:text-4xl {
        font-size: var(--text-4xl);
        line-height: var(--tw-leading, var(--text-4xl--line-height));
        }
    }
    @media (min-width: 64rem) {
        .lg\:w-1\/2 {
        width: 50%;
        }
        .lg\:w-2\/3 {
        width: 66.6667%;
        }
    }
    @media (prefers-color-scheme: dark) {
        .dark\:text-white {
        color: var(--color-white);
        }
    }
    }
    body {
    background-color: #ede1ff;
    }
    @property --tw-rotate-x {
    syntax: "*";
    inherits: false;
    }
    @property --tw-rotate-y {
    syntax: "*";
    inherits: false;
    }
    @property --tw-rotate-z {
    syntax: "*";
    inherits: false;
    }
    @property --tw-skew-x {
    syntax: "*";
    inherits: false;
    }
    @property --tw-skew-y {
    syntax: "*";
    inherits: false;
    }
    @property --tw-border-style {
    syntax: "*";
    inherits: false;
    initial-value: solid;
    }
    @property --tw-gradient-position {
    syntax: "*";
    inherits: false;
    }
    @property --tw-gradient-from {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
    }
    @property --tw-gradient-via {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
    }
    @property --tw-gradient-to {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000;
    }
    @property --tw-gradient-stops {
    syntax: "*";
    inherits: false;
    }
    @property --tw-gradient-via-stops {
    syntax: "*";
    inherits: false;
    }
    @property --tw-gradient-from-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 0%;
    }
    @property --tw-gradient-via-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 50%;
    }
    @property --tw-gradient-to-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 100%;
    }
    @property --tw-font-weight {
    syntax: "*";
    inherits: false;
    }
    @property --tw-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
    }
    @property --tw-shadow-color {
    syntax: "*";
    inherits: false;
    }
    @property --tw-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%;
    }
    @property --tw-inset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
    }
    @property --tw-inset-shadow-color {
    syntax: "*";
    inherits: false;
    }
    @property --tw-inset-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%;
    }
    @property --tw-ring-color {
    syntax: "*";
    inherits: false;
    }
    @property --tw-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
    }
    @property --tw-inset-ring-color {
    syntax: "*";
    inherits: false;
    }
    @property --tw-inset-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
    }
    @property --tw-ring-inset {
    syntax: "*";
    inherits: false;
    }
    @property --tw-ring-offset-width {
    syntax: "<length>";
    inherits: false;
    initial-value: 0;
    }
    @property --tw-ring-offset-color {
    syntax: "*";
    inherits: false;
    initial-value: #fff;
    }
    @property --tw-ring-offset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000;
    }
    @property --tw-blur {
    syntax: "*";
    inherits: false;
    }
    @property --tw-brightness {
    syntax: "*";
    inherits: false;
    }
    @property --tw-contrast {
    syntax: "*";
    inherits: false;
    }
    @property --tw-grayscale {
    syntax: "*";
    inherits: false;
    }
    @property --tw-hue-rotate {
    syntax: "*";
    inherits: false;
    }
    @property --tw-invert {
    syntax: "*";
    inherits: false;
    }
    @property --tw-opacity {
    syntax: "*";
    inherits: false;
    }
    @property --tw-saturate {
    syntax: "*";
    inherits: false;
    }
    @property --tw-sepia {
    syntax: "*";
    inherits: false;
    }
    @property --tw-drop-shadow {
    syntax: "*";
    inherits: false;
    }
    @property --tw-drop-shadow-color {
    syntax: "*";
    inherits: false;
    }
    @property --tw-drop-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%;
    }
    @property --tw-drop-shadow-size {
    syntax: "*";
    inherits: false;
    }
    @property --tw-backdrop-blur {
    syntax: "*";
    inherits: false;
    }
    @property --tw-backdrop-brightness {
    syntax: "*";
    inherits: false;
    }
    @property --tw-backdrop-contrast {
    syntax: "*";
    inherits: false;
    }
    @property --tw-backdrop-grayscale {
    syntax: "*";
    inherits: false;
    }
    @property --tw-backdrop-hue-rotate {
    syntax: "*";
    inherits: false;
    }
    @property --tw-backdrop-invert {
    syntax: "*";
    inherits: false;
    }
    @property --tw-backdrop-opacity {
    syntax: "*";
    inherits: false;
    }
    @property --tw-backdrop-saturate {
    syntax: "*";
    inherits: false;
    }
    @property --tw-backdrop-sepia {
    syntax: "*";
    inherits: false;
    }
    @property --tw-duration {
    syntax: "*";
    inherits: false;
    }
    @property --tw-scale-x {
    syntax: "*";
    inherits: false;
    initial-value: 1;
    }
    @property --tw-scale-y {
    syntax: "*";
    inherits: false;
    initial-value: 1;
    }
    @property --tw-scale-z {
    syntax: "*";
    inherits: false;
    initial-value: 1;
    }
